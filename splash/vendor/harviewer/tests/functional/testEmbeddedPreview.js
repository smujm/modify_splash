/**
 * Check custom time stamps generated by console.timeStamp() method.
 */
define([
  'intern',
  'intern!object',
  'intern/chai!assert',
  'require',
  './DriverUtils',
  'intern/dojo/node!leadfoot/helpers/pollUntil'
], function(intern, registerSuite, assert, require, DriverUtils, pollUntil) {
  var harViewerBase = intern.config.harviewer.harViewerBase;
  var testBase = intern.config.harviewer.testBase;

  registerSuite({
    name: 'testEmbeddedPreview',

    'testEmbeddedPreview': function() {
      // Some of these tests need a larger timeout for finding DOM elements
      // because we need the HAR to parse/display fully before we query the DOM.
      var findTimeout = intern.config.harviewer.findTimeout;
      var r = this.remote;
      var utils = new DriverUtils(r);

      var url = testBase + "tests/testEmbeddedPreview.html.php";

      return r
        .setFindTimeout(findTimeout)
        .get(url)
        .then(DriverUtils.waitForElements("iframe", 3, findTimeout))
        .then(pollUntil(DriverUtils.querySelectAllInFrameAndReturnLengthOrNull, ['#preview1', '.pageTable'], findTimeout))
        .then(function(len) {
          assert.strictEqual(len, 1, "#preview1.pageTable");
        })
        .then(pollUntil(DriverUtils.querySelectAllInFrameAndReturnLengthOrNull, ['#preview2', '.pageTable'], findTimeout))
        .then(function(len) {
          assert.strictEqual(len, 1, "#preview2.pageTable");
        })
        .then(pollUntil(DriverUtils.querySelectAllInFrameAndReturnLengthOrNull, ['#preview3', '.pageTable'], findTimeout))
        .then(function(len) {
          assert.strictEqual(len, 1, "#preview3.pageTable");
        })
        .then(pollUntil(DriverUtils.querySelectAllInFrameAndReturnLengthOrNull, ['#preview1', '.netRow'], findTimeout))
        .then(function(len) {
          assert.strictEqual(len, 2, "#preview3.netRow");
        })
        .then(pollUntil(DriverUtils.querySelectAllInFrameAndReturnLengthOrNull, ['#preview2', '.netRow'], findTimeout))
        .then(function(len) {
          assert.strictEqual(len, 2, "#preview2.netRow");
        })
        .then(pollUntil(DriverUtils.querySelectAllInFrameAndReturnLengthOrNull, ['#preview3', '.netRow'], findTimeout))
        .then(function(len) {
          assert.strictEqual(len, 11, "#preview3.netRow");
        })
        .execute("return document.querySelector('#preview2').firstChild.clientWidth")
        .then(function(width) {
          // PhantomJS-2.1.1 gives 497.
          assert.include([400, 497], width, "#preview2.firstChild.clientHeight");
        })
        .execute("return document.querySelector('#preview2').firstChild.clientHeight")
        .then(function(height) {
          // PhantomJS-2.0.0 gives 56.
          assert.include([50, 56], height, "#preview2.firstChild.clientHeight");
        });
    }
  });
});
