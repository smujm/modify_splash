<?php
require_once("HARTestCase.php");

/**
 * Check custom time stamps generated by console.timeStamp() method.
 */ 
class HAR_TestCustomizeColumns extends HAR_TestCase
{
    public function testCustomizeColumns()
    {
        print "\ntestCustomizeColumns.php (1)";

        // HAR file is specified inside the test page.
        $viewerURL = $GLOBALS["test_base"]."tests/testCustomizeColumnsPage.php";
        $harFileURL = $GLOBALS["test_base"]."tests/hars/simple.har";
        $this->open($viewerURL."?path=".$harFileURL);

        $this->waitForElement(".PreviewTab.selected");

        // Make sure we are in the Preview tab.
        $this->assertElementContainsText("css=.PreviewTab.selected", "Preview");

        // Check columns visibility
        $this->assertColumnIsVisible(".netTable .netHrefCol");
        $this->assertColumnIsVisible(".netTable .netTypeCol");
        $this->assertColumnIsVisible(".netTable .netTimeCol");

        $this->assertColumnIsNotVisible(".netTable .netSizeCol");
        $this->assertColumnIsNotVisible(".netTable .netStatusCol");
        $this->assertColumnIsNotVisible(".netTable .netDomainCol");
    }

    public function testCustomizeColumns2()
    {
        print "\ntestCustomizeColumns.php (2)";

        // HAR file is specified inside the test page.
        $viewerURL = $GLOBALS["test_base"]."tests/testCustomizeColumnsPage2.php";
        $harFileURL = $GLOBALS["test_base"]."tests/hars/simple.har";
        $this->open($viewerURL."?path=".$harFileURL);

        $this->waitForElement(".PreviewTab.selected");

        // Make sure we are in the Preview tab.
        $this->assertElementContainsText("css=.PreviewTab.selected", "Preview");

        // Check columns visibility
        $this->assertColumnIsVisible(".netTable .netHrefCol");
        $this->assertColumnIsVisible(".netTable .netStatusCol");
        $this->assertColumnIsVisible(".netTable .netSizeCol");
        $this->assertColumnIsVisible(".netTable .netTimeCol");

        $this->assertColumnIsNotVisible(".netTable .netTypeCol");
        $this->assertColumnIsNotVisible(".netTable .netDomainCol");
    }

    public function testCustomizeColumns3()
    {
        print "\ntestCustomizeColumns.php (3)";

        // HAR file is specified inside the test page.
        $viewerURL = $GLOBALS["test_base"]."tests/testCustomizeColumnsPage3.php";
        $harFileURL = $GLOBALS["test_base"]."tests/hars/simple.har";
        $this->open($viewerURL."?path=".$harFileURL."&expand=true");

        $this->waitForElement(".pageTable .pageRow.opened");

        // Check columns visibility
        $this->assertColumnIsVisible(".netTable .netHrefCol");
        $this->assertColumnIsVisible(".netTable .netTimeCol");

        $this->assertColumnIsNotVisible(".netTable .netStatusCol");
        $this->assertColumnIsNotVisible(".netTable .netSizeCol");
        $this->assertColumnIsNotVisible(".netTable .netTypeCol");
        $this->assertColumnIsNotVisible(".netTable .netDomainCol");
    }

    public function assertColumnIsVisible($locator)
    {
        $this->assertColumnVisibility(true, $locator);
    }

    public function assertColumnIsNotVisible($locator)
    {
        $this->assertColumnVisibility(false, $locator);
    }

    public function assertColumnVisibility($visible, $locator)
    {
        $op = $visible ? ">" : "==";
        $document = "selenium.browserbot.getCurrentWindow().document.";
        $script = $document."querySelector('".$locator."').clientWidth ".$op." 0";
        $this->assertEquals("true", $this->getEval($script), "Column ".$locator." is wrong");
    }
}
?>
